basePath: /
definitions:
  main.Product:
    properties:
      id:
        description: "@Description\tThe unique ID of the product"
        type: integer
      name:
        description: "@Description\tThe name of the product"
        type: string
    type: object
host: '{host}'
info:
  contact: {}
  description: The name of the product
  title: Product API
  version: "1.0"
paths:
  /products:
    delete:
      consumes:
      - application/json
      description: Remove a product's information by name
      parameters:
      - description: Name of the product to delete
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete a product by name
      tags:
      - products
    get:
      description: Get all products or retrieve a specific product by name. Name query
        parameter is optional.
      parameters:
      - description: Name of the product to retrieve
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Product'
            type: array
      summary: List all products or get a product by name
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Add a new product to the database
      parameters:
      - description: Product object
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/main.Product'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Product'
      summary: Create a new product
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update a product's information by name
      parameters:
      - description: Name of the product to update
        in: query
        name: name
        required: true
        type: string
      - description: Updated product object
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/main.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Product'
      summary: Update a product by name
      tags:
      - products
  /products/{id}:
    delete:
      description: Delete a product by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a product
      tags:
      - products
    get:
      description: Get a product by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Product'
      summary: Get a product
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update a product's information
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated product object
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/main.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Product'
      summary: Update a product
      tags:
      - products
swagger: "2.0"
